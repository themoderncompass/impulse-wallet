{
  "version": 3,
  "sources": ["../bundle-Y2Njdo/checked-fetch.js", "../bundle-So1vPP/checked-fetch.js", "../../../functions/impulse-api/_util.js", "../../../functions/impulse-api/events.js", "../../../functions/impulse-api/focus.js", "../../../functions/impulse-api/health.js", "../../../functions/impulse-api/init-db.js", "../../../functions/impulse-api/room.js", "../../../functions/impulse-api/room-leave.js", "../../../functions/impulse-api/room-manage.js", "../../../functions/impulse-api/room-suggestions.js", "../../../functions/impulse-api/state.js", "../../../functions/impulse-api/user.js", "../pages-yKdVed/functionsRoutes-0.7173821348128027.mjs", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-So1vPP/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-So1vPP/middleware-loader.entry.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-Y2Njdo/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-Y2Njdo/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/dev-Er3I8E",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export function json(body, status = 200) {\n  return new Response(JSON.stringify(body), {\n    status,\n    headers: { \n      \"content-type\": \"application/json\",\n      \"access-control-allow-origin\": \"*\",\n      \"access-control-allow-methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n      \"access-control-allow-headers\": \"Content-Type, Authorization\"\n    }\n  });\n}\n\n// Enhanced UPSERT helper for consistent database operations\nexport async function upsertWithRetry(env, query, bindings, maxRetries = 3) {\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      const result = await env.DB.prepare(query).bind(...bindings).run();\n      return result;\n    } catch (error) {\n      if (attempt === maxRetries) throw error;\n      \n      // Handle common SQLite concurrency issues\n      const msg = error.message.toLowerCase();\n      if (msg.includes('locked') || msg.includes('busy') || msg.includes('constraint')) {\n        // Exponential backoff: 10ms, 40ms, 160ms\n        await new Promise(resolve => setTimeout(resolve, 10 * Math.pow(4, attempt - 1)));\n        continue;\n      }\n      throw error;\n    }\n  }\n}\n\n// Event logging helper - will be used across all endpoints\nexport async function logEvent(env, eventType, data = {}) {\n  try {\n    const event = {\n      type: eventType,\n      data: data,\n      timestamp: new Date().toISOString(),\n      id: crypto.randomUUID()\n    };\n    \n    await upsertWithRetry(env, `\n      INSERT INTO events (id, type, data, created_at)\n      VALUES (?, ?, ?, ?)\n    `, [event.id, eventType, JSON.stringify(data), event.timestamp]);\n    \n    return event;\n  } catch (error) {\n    console.error('Event logging failed:', error);\n    // Don't fail the main operation if logging fails\n    return null;\n  }\n}\n", "import { json, logEvent, upsertWithRetry } from \"./_util.js\";\n\nconst up = (s) => (s || \"\").trim().toUpperCase();\n\nasync function ensureEventsTable(env) {\n  try {\n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS events (\n        id TEXT PRIMARY KEY,\n        type TEXT NOT NULL,\n        room_code TEXT,\n        user_id TEXT,\n        data TEXT,\n        created_at TEXT DEFAULT CURRENT_TIMESTAMP\n      )\n    `).run();\n  } catch (error) {\n    console.error('Failed to ensure events table:', error);\n  }\n  \n  await env.DB.prepare(`\n    CREATE INDEX IF NOT EXISTS idx_events_type ON events(type)\n  `).run();\n  \n  await env.DB.prepare(`\n    CREATE INDEX IF NOT EXISTS idx_events_room ON events(room_code)\n  `).run();\n  \n  await env.DB.prepare(`\n    CREATE INDEX IF NOT EXISTS idx_events_created ON events(created_at)\n  `).run();\n}\n\n// GET /impulse-api/events?roomCode=ABCDE&type=room_join&limit=100\nexport async function onRequestGet({ request, env }) {\n  try {\n    await ensureEventsTable(env);\n    \n    const url = new URL(request.url);\n    const roomCode = up(url.searchParams.get(\"roomCode\") || \"\");\n    const eventType = url.searchParams.get(\"type\");\n    const limit = Math.min(parseInt(url.searchParams.get(\"limit\")) || 50, 200);\n    \n    let query = `SELECT id, type, room_code, user_id, data, created_at FROM events WHERE 1=1`;\n    const bindings = [];\n    \n    if (roomCode) {\n      query += ` AND room_code = ?`;\n      bindings.push(roomCode);\n    }\n    \n    if (eventType) {\n      query += ` AND type = ?`;\n      bindings.push(eventType);\n    }\n    \n    query += ` ORDER BY created_at DESC LIMIT ?`;\n    bindings.push(limit);\n    \n    const result = await env.DB.prepare(query).bind(...bindings).all();\n    const events = (result.results || []).map(row => ({\n      id: row.id,\n      type: row.type,\n      roomCode: row.room_code,\n      userId: row.user_id,\n      data: row.data ? JSON.parse(row.data) : {},\n      createdAt: row.created_at\n    }));\n    \n    return json({ ok: true, events, count: events.length });\n  } catch (error) {\n    console.error('Events fetch error:', error);\n    return json({ error: error.message || 'Failed to fetch events' }, 500);\n  }\n}\n\n// POST /impulse-api/events - Manual event logging (for testing/admin)\nexport async function onRequestPost({ request, env }) {\n  try {\n    await ensureEventsTable(env);\n    \n    const body = await request.json().catch(() => ({}));\n    const { type, roomCode, userId, data = {} } = body;\n    \n    if (!type) {\n      return json({ error: 'Event type is required' }, 400);\n    }\n    \n    const event = await logEvent(env, type, {\n      ...data,\n      roomCode: roomCode ? up(roomCode) : undefined,\n      userId\n    });\n    \n    if (!event) {\n      return json({ error: 'Failed to log event' }, 500);\n    }\n    \n    return json({ ok: true, event }, 201);\n  } catch (error) {\n    console.error('Event creation error:', error);\n    return json({ error: error.message || 'Failed to create event' }, 500);\n  }\n}", "// functions/impulse-api/focus.js\nimport { json, upsertWithRetry, logEvent } from \"./_util.js\";\n\nconst up = (s) => (s || \"\").trim().toUpperCase();\n\nasync function getCols(env, table) {\n  const info = await env.DB.prepare(`PRAGMA table_info(${table})`).all();\n  const cols = {};\n  for (const r of (info.results || [])) cols[r.name] = { notnull: !!r.notnull, pk: !!r.pk, type: r.type };\n  return cols;\n}\n\nasync function ensurePlayersShape(env) {\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS players (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      room_code TEXT NOT NULL,\n      user_id TEXT NOT NULL,\n      name TEXT NOT NULL,\n      name_norm TEXT,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      last_seen_at TEXT DEFAULT CURRENT_TIMESTAMP\n    )\n  `).run();\n  await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_user ON players(room_code, user_id)`).run();\n  await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_name_norm ON players(room_code, name_norm)`).run();\n}\n\nasync function ensureFocusShape(env) {\n  await env.DB.prepare(`CREATE TABLE IF NOT EXISTS weekly_focus (id INTEGER PRIMARY KEY AUTOINCREMENT)`).run();\n\n  const cols = await getCols(env, \"weekly_focus\");\n  const add = async (name, ddl) => {\n    if (!cols[name]) await env.DB.prepare(`ALTER TABLE weekly_focus ADD COLUMN ${name} ${ddl}`).run();\n  };\n\n  // New UUID-first columns (keep old ones if present; we won't delete)\n  await add(\"room_code\",   \"TEXT\");\n  await add(\"player_uuid\", \"TEXT\"); // UUID\n  await add(\"player_name\", \"TEXT\"); // canonical display name\n  await add(\"week_key\",    \"TEXT\"); // YYYY-MM-DD\n  await add(\"areas\",       \"TEXT\");\n  await add(\"locked\",      \"INTEGER DEFAULT 1\");\n  await add(\"created_at\",  \"TEXT DEFAULT CURRENT_TIMESTAMP\");\n\n  // Old column seen in your file; keep it but unused now\n  await add(\"player_id\",   \"TEXT\");\n\n  // One record per (room, uuid, week)\n  await env.DB.prepare(`\n    CREATE UNIQUE INDEX IF NOT EXISTS u_weekly_focus_room_uuid_week\n    ON weekly_focus(room_code, player_uuid, week_key)\n  `).run();\n}\n\nfunction validWeekKey(weekKey) {\n  return typeof weekKey === \"string\" && /^\\d{4}-\\d{2}-\\d{2}$/.test(weekKey);\n}\n\nasync function requireMember(env, roomCode, userId) {\n  await ensurePlayersShape(env);\n  const m = await env.DB.prepare(`\n    SELECT user_id, name\n    FROM players\n    WHERE room_code = ? AND user_id = ?\n    LIMIT 1\n  `).bind(roomCode, userId).first();\n  return m || null;\n}\n\n// GET /impulse-api/focus?roomCode=ABCDE&userId=UUID&weekKey=YYYY-MM-DD\nexport async function onRequestGet({ request, env }) {\n  try {\n    const url = new URL(request.url);\n    const roomCode = up(url.searchParams.get(\"roomCode\"));\n    const userId   = (url.searchParams.get(\"userId\") || \"\").trim();\n    const weekKey  = url.searchParams.get(\"weekKey\");\n\n    if (!roomCode) return json({ error: \"roomCode required\" }, 400);\n    if (!userId)   return json({ error: \"userId (UUID) required\" }, 401);\n    if (!validWeekKey(weekKey || \"\")) return json({ error: \"valid weekKey (YYYY-MM-DD) required\" }, 400);\n\n    await ensureFocusShape(env);\n\n    const member = await requireMember(env, roomCode, userId);\n    if (!member) {\n      return json({ error: \"Join the room before loading focus.\", error_code: \"JOIN_REQUIRED\" }, 403);\n    }\n\n    const row = await env.DB.prepare(`\n      SELECT week_key AS weekKey, areas, locked, player_name\n      FROM weekly_focus\n      WHERE room_code = ? AND player_uuid = ? AND week_key = ?\n      LIMIT 1\n    `).bind(roomCode, userId, weekKey).first();\n\n    if (!row) {\n      return json({\n        roomCode,\n        userId,\n        weekKey,\n        areas: [],\n        locked: false,\n        playerName: member.name\n      });\n    }\n\n    return json({\n      roomCode,\n      userId,\n      weekKey: row.weekKey,\n      areas: JSON.parse(row.areas || \"[]\"),\n      locked: !!row.locked,\n      playerName: row.player_name ?? member.name\n    });\n  } catch (e) {\n    return json({ error: e?.message || String(e) }, 500);\n  }\n}\n\n// POST /impulse-api/focus  { roomCode, userId, weekKey, areas: string[] }\nexport async function onRequestPost({ request, env }) {\n  try {\n    const payload = await request.json().catch(() => ({}));\n    const roomCode = up(payload.roomCode);\n    const userId   = (payload.userId || \"\").trim();\n    const weekKey  = payload.weekKey;\n    const areasArr = payload.areas;\n\n    if (!roomCode) return json({ error: \"roomCode required\" }, 400);\n    if (!userId)   return json({ error: \"userId (UUID) required\" }, 401);\n    if (!validWeekKey(weekKey || \"\")) return json({ error: \"valid weekKey (YYYY-MM-DD) required\" }, 400);\n    if (!Array.isArray(areasArr)) return json({ error: \"areas must be an array\" }, 400);\n\n    const clean = Array.from(new Set(areasArr.map(a => String(a).trim()).filter(Boolean)));\n    if (clean.length < 2 || clean.length > 3) return json({ error: \"Select 2\u20133 areas\" }, 400);\n\n    await ensureFocusShape(env);\n\n    const member = await requireMember(env, roomCode, userId);\n    if (!member) {\n      return json({ error: \"Join the room before saving focus.\", error_code: \"JOIN_REQUIRED\" }, 403);\n    }\n\n    // Enforce once per week per UUID\n    const exists = await env.DB.prepare(`\n      SELECT id FROM weekly_focus\n      WHERE room_code = ? AND player_uuid = ? AND week_key = ?\n      LIMIT 1\n    `).bind(roomCode, userId, weekKey).first();\n\n    if (exists) return json({ error: \"Weekly focus already set for this week\" }, 409);\n\n    // Use UPSERT instead of INSERT to handle edge cases better\n    await upsertWithRetry(env, `\n      INSERT INTO weekly_focus (room_code, player_uuid, player_name, week_key, areas, locked)\n      VALUES (?, ?, ?, ?, ?, 1)\n      ON CONFLICT(room_code, player_uuid, week_key) DO UPDATE SET\n        areas = excluded.areas,\n        player_name = excluded.player_name,\n        created_at = CURRENT_TIMESTAMP\n    `, [roomCode, userId, member.name, weekKey, JSON.stringify(clean)]);\n    \n    // Log focus setting event\n    await logEvent(env, 'focus_set', {\n      roomCode,\n      userId,\n      weekKey,\n      areasCount: clean.length,\n      playerName: member.name\n    });\n\n    // optional: bump last_seen_at with retry logic\n    await upsertWithRetry(env, `\n      UPDATE players SET last_seen_at = CURRENT_TIMESTAMP\n      WHERE room_code = ? AND user_id = ?\n    `, [roomCode, userId]);\n\n    return json({ roomCode, userId, weekKey, areas: clean, locked: true }, 201);\n  } catch (e) {\n    return json({ error: e?.message || String(e) }, 500);\n  }\n}", "import { json } from \"./_util\";\n\nexport const onRequestGet = async ({ env }) => {\n  try {\n    const r = await env.DB.prepare(\"select 1 as ok\").first();\n    return json({ ok: true, db: r?.ok === 1 });\n  } catch (e) {\n    console.error(\"health error:\", e);\n    return json({ ok: false, error: e?.message || String(e) }, 500);\n  }\n};\n", "import { json } from \"./_util.js\";\n\n// Initialize database with all required tables\nexport async function onRequestPost({ request, env }) {\n  try {\n    console.log('Initializing database tables...');\n    \n    // Create events table\n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS events (\n        id TEXT PRIMARY KEY,\n        type TEXT NOT NULL,\n        room_code TEXT,\n        user_id TEXT,\n        data TEXT,\n        created_at TEXT DEFAULT CURRENT_TIMESTAMP\n      )\n    `).run();\n    \n    // Create/update rooms table with all new columns\n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS rooms (\n        code TEXT PRIMARY KEY,\n        created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n        is_locked INTEGER DEFAULT 0,\n        invite_only INTEGER DEFAULT 0,\n        created_by TEXT,\n        max_members INTEGER DEFAULT 50,\n        invite_code TEXT\n      )\n    `).run();\n    \n    // Add missing columns to existing rooms table\n    const addColumn = async (column, definition) => {\n      try {\n        await env.DB.prepare(`ALTER TABLE rooms ADD COLUMN ${column} ${definition}`).run();\n      } catch (e) {\n        // Column already exists, ignore\n      }\n    };\n    \n    await addColumn('is_locked', 'INTEGER DEFAULT 0');\n    await addColumn('invite_only', 'INTEGER DEFAULT 0'); \n    await addColumn('created_by', 'TEXT');\n    await addColumn('max_members', 'INTEGER DEFAULT 50');\n    await addColumn('invite_code', 'TEXT');\n    \n    // Create other tables\n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS players (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        room_code TEXT NOT NULL,\n        user_id TEXT NOT NULL,\n        name TEXT NOT NULL,\n        name_norm TEXT,\n        created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n        last_seen_at TEXT DEFAULT CURRENT_TIMESTAMP\n      )\n    `).run();\n    \n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS users (\n        id TEXT PRIMARY KEY,\n        email TEXT,\n        display_name TEXT,\n        created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n        updated_at TEXT DEFAULT CURRENT_TIMESTAMP\n      )\n    `).run();\n    \n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS entries (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        room_code TEXT,\n        player_uuid TEXT,\n        player_name TEXT,\n        delta INTEGER DEFAULT 0,\n        label TEXT,\n        created_at TEXT DEFAULT CURRENT_TIMESTAMP\n      )\n    `).run();\n    \n    await env.DB.prepare(`\n      CREATE TABLE IF NOT EXISTS weekly_focus (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        room_code TEXT,\n        player_uuid TEXT,\n        player_name TEXT,\n        week_key TEXT,\n        areas TEXT,\n        locked INTEGER DEFAULT 1,\n        created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n        player_id TEXT\n      )\n    `).run();\n    \n    // Create indexes\n    await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_user ON players(room_code, user_id)`).run();\n    await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_name_norm ON players(room_code, name_norm)`).run();\n    await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_weekly_focus_room_uuid_week ON weekly_focus(room_code, player_uuid, week_key)`).run();\n    await env.DB.prepare(`CREATE INDEX IF NOT EXISTS idx_events_type ON events(type)`).run();\n    await env.DB.prepare(`CREATE INDEX IF NOT EXISTS idx_events_room ON events(room_code)`).run();\n    await env.DB.prepare(`CREATE INDEX IF NOT EXISTS idx_entries_room ON entries(room_code)`).run();\n    \n    console.log('Database initialization complete!');\n    \n    return json({ \n      ok: true, \n      message: 'Database initialized successfully',\n      tables: ['events', 'rooms', 'players', 'users', 'entries', 'weekly_focus']\n    });\n    \n  } catch (error) {\n    console.error('Database initialization failed:', error);\n    return json({ error: error.message || 'Database initialization failed' }, 500);\n  }\n}", "// functions/impulse-api/room.js\nimport { json, upsertWithRetry, logEvent } from \"./_util.js\";\n\n// small helper: normalize names for case-insensitive dedupe\nconst norm = (s) => (s || \"\").trim().toLowerCase();\n\n// Generate a random invite code (8 characters, alphanumeric)\nconst generateInviteCode = () => {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = '';\n  for (let i = 0; i < 8; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n};\n\n// Ensure/upgrade schema (idempotent). Call at the start of GET/POST.\nasync function ensureSchema(env) {\n  // rooms table (codes stored UPPERCASE by us)\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS rooms (\n      code TEXT PRIMARY KEY,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      is_locked INTEGER DEFAULT 0,\n      invite_only INTEGER DEFAULT 0,\n      created_by TEXT,\n      max_members INTEGER DEFAULT 50,\n      invite_code TEXT\n    )\n  `).run();\n  \n  // Add new columns if they don't exist (for existing tables)\n  const addColumnIfNotExists = async (column, definition) => {\n    try {\n      await env.DB.prepare(`ALTER TABLE rooms ADD COLUMN ${column} ${definition}`).run();\n    } catch (e) {\n      // Column likely already exists, ignore error\n    }\n  };\n  \n  await addColumnIfNotExists('is_locked', 'INTEGER DEFAULT 0');\n  await addColumnIfNotExists('invite_only', 'INTEGER DEFAULT 0');\n  await addColumnIfNotExists('created_by', 'TEXT');\n  await addColumnIfNotExists('max_members', 'INTEGER DEFAULT 50');\n  await addColumnIfNotExists('invite_code', 'TEXT');\n\n  // players is effectively \"room_members\" (one row per player per room)\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS players (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      room_code TEXT NOT NULL,\n      user_id TEXT NOT NULL,          -- UUID from client\n      name TEXT NOT NULL,             -- display name as shown to users\n      name_norm TEXT,                 -- normalized for case-insensitive uniqueness\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      last_seen_at TEXT DEFAULT CURRENT_TIMESTAMP\n    )\n  `).run();\n\n  // add missing columns/indexes safely (no-ops if exist)\n  await env.DB.prepare(`PRAGMA foreign_keys = ON`).run();\n\n  // name_norm column may not exist in older tables\n  await env.DB.prepare(`\n    CREATE INDEX IF NOT EXISTS idx_players_room_user ON players(room_code, user_id)\n  `).run();\n  await env.DB.prepare(`\n    CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_user ON players(room_code, user_id)\n  `).run();\n\n  // unique display name per room (case-insensitive via name_norm)\n  await env.DB.prepare(`\n    CREATE INDEX IF NOT EXISTS idx_players_room_name_norm ON players(room_code, name_norm)\n  `).run();\n  await env.DB.prepare(`\n    CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_name_norm ON players(room_code, name_norm)\n  `).run();\n}\n\n// GET /impulse-api/room?roomCode=ABCDE&displayName=Josh&userId=uuid\n// Used to validate room existence and (optionally) pre-check name dedupe\nexport const onRequestGet = async ({ request, env }) => {\n  try {\n    await ensureSchema(env);\n\n    const url = new URL(request.url);\n    const roomCodeRaw = url.searchParams.get(\"roomCode\") || \"\";\n    const roomCode = roomCodeRaw.trim().toUpperCase();  // canonicalize\n    const displayName = (url.searchParams.get(\"displayName\") || \"\").trim();\n    const userId = (url.searchParams.get(\"userId\") || \"\").trim();\n\n    if (!roomCode) return json({ error: \"roomCode required\" }, 400);\n\n    const room = await env.DB\n      .prepare(\"SELECT code, created_at, is_locked, invite_only, created_by, max_members FROM rooms WHERE code = ?\")\n      .bind(roomCode)\n      .first();\n\n    if (!room) return json({ error: \"Room not found\" }, 404);\n\n    if (displayName && userId) {\n      const nameNorm = norm(displayName);\n      // Is this name already taken by a different UUID in this room?\n      const taken = await env.DB\n        .prepare(`\n          SELECT user_id FROM players\n          WHERE room_code = ? AND name_norm = ?\n          LIMIT 1\n        `)\n        .bind(roomCode, nameNorm)\n        .first();\n\n      if (taken && taken.user_id !== userId) {\n        return json({\n          error: `The name \"${displayName}\" is already taken in this room. Please choose a different name.`,\n          error_code: \"DUPLICATE_NAME\"\n        }, 409);\n      }\n    }\n\n    return json({ ok: true, room });\n  } catch (e) {\n    return json({ error: e?.message || String(e) }, 500);\n  }\n};\n\n// POST /impulse-api/room { roomCode, displayName?, userId? }\n// - Ensures room exists\n// - If displayName+userId provided: claims/updates membership idempotently\nexport const onRequestPost = async ({ request, env }) => {\n  try {\n    await ensureSchema(env);\n\n    const body = await request.json().catch(() => ({}));\n    const roomCodeRaw = body?.roomCode || \"\";\n    const roomCode = roomCodeRaw.trim().toUpperCase();  // canonicalize\n    const displayName = (body?.displayName || \"\").trim();\n    const userId = (body?.userId || \"\").trim();\n    const providedInviteCode = (body?.inviteCode || \"\").trim().toUpperCase();\n\n    if (!roomCode) return json({ error: \"roomCode required\" }, 400);\n    \n    // Enhanced room code validation and collision prevention\n    if (roomCode.length < 3) {\n      return json({ \n        error: \"Room code must be at least 3 characters long\",\n        error_code: \"ROOM_CODE_TOO_SHORT\" \n      }, 400);\n    }\n    \n    if (roomCode.length > 12) {\n      return json({ \n        error: \"Room code must be 12 characters or less\",\n        error_code: \"ROOM_CODE_TOO_LONG\" \n      }, 400);\n    }\n    \n    // Check for inappropriate/reserved room codes\n    const reservedCodes = ['ADMIN', 'API', 'TEST', 'DEBUG', 'NULL', 'UNDEFINED', 'ERROR'];\n    if (reservedCodes.includes(roomCode)) {\n      return json({ \n        error: \"This room code is reserved. Please choose a different one.\",\n        error_code: \"ROOM_CODE_RESERVED\" \n      }, 400);\n    }\n\n    // Check if room already exists to determine if we need to generate invite code\n    const existingRoom = await env.DB.prepare(\n      \"SELECT code, invite_code FROM rooms WHERE code = ?\"\n    ).bind(roomCode).first();\n    \n    // Generate invite code for new rooms\n    const inviteCode = existingRoom?.invite_code || generateInviteCode();\n    \n    // Upsert room with retry logic - set creator and invite code if it's a new room\n    await upsertWithRetry(env,\n      \"INSERT OR IGNORE INTO rooms (code, created_by, invite_code) VALUES (?, ?, ?)\",\n      [roomCode, userId || 'anonymous', inviteCode]\n    );\n    \n    // Log room creation/access event\n    await logEvent(env, 'room_accessed', {\n      roomCode,\n      userId: userId || 'anonymous',\n      action: 'create_or_access'\n    });\n\n    // Check room status after ensuring it exists\n    const roomStatus = await env.DB\n      .prepare(\"SELECT code, created_at, is_locked, invite_only, created_by, max_members FROM rooms WHERE code = ?\")\n      .bind(roomCode)\n      .first();\n\n    // If the client provided a name, claim/update membership for this UUID\n    if (displayName) {\n      if (!userId) return json({ error: \"userId required when displayName is provided\" }, 400);\n      \n      // Check if room is invite-only (creators can always join)\n      if (roomStatus?.invite_only && roomStatus.created_by !== userId) {\n        // Get the room's invite code for validation\n        const roomWithInvite = await env.DB\n          .prepare(\"SELECT invite_code FROM rooms WHERE code = ?\")\n          .bind(roomCode)\n          .first();\n        \n        // If no invite code provided or doesn't match, deny access\n        if (!providedInviteCode || providedInviteCode !== roomWithInvite?.invite_code) {\n          return json({\n            error: \"This room is invite-only. Please provide a valid invite code to join.\",\n            error_code: \"ROOM_INVITE_ONLY\"\n          }, 403);\n        }\n      }\n      \n      // Check member count limit\n      const currentMemberCount = await env.DB.prepare(`\n        SELECT COUNT(*) as count FROM players WHERE room_code = ?\n      `).bind(roomCode).first();\n      \n      const maxMembers = roomStatus?.max_members || 50;\n      \n      if (currentMemberCount?.count >= maxMembers) {\n        return json({\n          error: `Room is full (${maxMembers} members maximum)`,\n          error_code: \"ROOM_FULL\"\n        }, 403);\n      }\n\n      const nameNorm = norm(displayName);\n\n      // Pre-check duplicate name owned by a different UUID (friendly 409)\n      const existingByName = await env.DB\n        .prepare(`\n          SELECT user_id FROM players\n          WHERE room_code = ? AND name_norm = ?\n          LIMIT 1\n        `)\n        .bind(roomCode, nameNorm)\n        .first();\n\n      if (existingByName && existingByName.user_id !== userId) {\n        return json({\n          error: `The name \"${displayName}\" is already taken in this room. Please choose a different name.`,\n          error_code: \"DUPLICATE_NAME\"\n        }, 409);\n      }\n\n      // Idempotent membership UPSERT with retry logic\n      const membershipResult = await upsertWithRetry(env, `\n        INSERT INTO players (room_code, user_id, name, name_norm)\n        VALUES (?, ?, ?, ?)\n        ON CONFLICT(room_code, user_id) DO UPDATE SET\n          name = excluded.name,\n          name_norm = excluded.name_norm,\n          last_seen_at = CURRENT_TIMESTAMP\n      `, [roomCode, userId, displayName, nameNorm]);\n      \n      // Log membership event\n      await logEvent(env, 'user_joined_room', {\n        roomCode,\n        userId,\n        displayName,\n        isNewMember: membershipResult.changes > 0\n      });\n    }\n\n    const room = await env.DB\n      .prepare(\"SELECT code, created_at, is_locked, invite_only, created_by, max_members FROM rooms WHERE code = ?\")\n      .bind(roomCode)\n      .first();\n\n    return json({ ok: true, room });\n  } catch (e) {\n    // If a race sneaks past the pre-check, surface a clean 409\n    const msg = e?.message || String(e);\n    if (msg.includes(\"u_players_room_name_norm\")) {\n      return json({\n        error: \"Display name already taken in this room.\",\n        error_code: \"DUPLICATE_NAME\"\n      }, 409);\n    }\n    return json({ error: msg }, 500);\n  }\n};\n", "import { json, upsertWithRetry, logEvent } from \"./_util.js\";\n\nconst up = (s) => (s || \"\").trim().toUpperCase();\n\nasync function ensurePlayersShape(env) {\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS players (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      room_code TEXT NOT NULL,\n      user_id TEXT NOT NULL,\n      name TEXT NOT NULL,\n      name_norm TEXT,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      last_seen_at TEXT DEFAULT CURRENT_TIMESTAMP\n    )\n  `).run();\n  await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_user ON players(room_code, user_id)`).run();\n}\n\nasync function getUserRoomStats(env, roomCode, userId) {\n  // Get user's activity stats in this room\n  const stats = await env.DB.prepare(`\n    SELECT \n      COUNT(*) as entryCount,\n      COALESCE(SUM(delta), 0) as totalDelta,\n      MIN(created_at) as firstEntry,\n      MAX(created_at) as lastEntry\n    FROM entries \n    WHERE room_code = ? AND player_uuid = ?\n  `).bind(roomCode, userId).first();\n  \n  const focusCount = await env.DB.prepare(`\n    SELECT COUNT(*) as count\n    FROM weekly_focus\n    WHERE room_code = ? AND player_uuid = ?\n  `).bind(roomCode, userId).first();\n  \n  return {\n    entryCount: stats?.entryCount || 0,\n    totalDelta: stats?.totalDelta || 0,\n    firstEntry: stats?.firstEntry,\n    lastEntry: stats?.lastEntry,\n    focusWeeksCount: focusCount?.count || 0\n  };\n}\n\n// GET /impulse-api/room-leave?roomCode=ABCDE&userId=uuid - Get leave confirmation info\nexport async function onRequestGet({ request, env }) {\n  try {\n    await ensurePlayersShape(env);\n    \n    const url = new URL(request.url);\n    const roomCode = up(url.searchParams.get('roomCode') || '');\n    const userId = (url.searchParams.get('userId') || '').trim();\n    \n    if (!roomCode) return json({ error: 'roomCode required' }, 400);\n    if (!userId) return json({ error: 'userId required' }, 400);\n    \n    // Check if user is actually in the room\n    const member = await env.DB.prepare(`\n      SELECT name, created_at, last_seen_at\n      FROM players \n      WHERE room_code = ? AND user_id = ?\n    `).bind(roomCode, userId).first();\n    \n    if (!member) {\n      return json({ \n        error: 'You are not a member of this room',\n        error_code: 'NOT_A_MEMBER'\n      }, 404);\n    }\n    \n    // Get user's activity stats for confirmation message\n    const stats = await getUserRoomStats(env, roomCode, userId);\n    \n    // Calculate days since joining\n    const joinedDate = new Date(member.created_at);\n    const daysSinceJoined = Math.ceil((Date.now() - joinedDate.getTime()) / (1000 * 60 * 60 * 24));\n    \n    return json({\n      ok: true,\n      roomCode,\n      userId,\n      memberInfo: {\n        name: member.name,\n        joinedDate: member.created_at,\n        lastSeen: member.last_seen_at,\n        daysSinceJoined\n      },\n      activityStats: stats,\n      confirmationMessage: generateLeaveMessage(member.name, stats, daysSinceJoined)\n    });\n    \n  } catch (error) {\n    console.error('Leave room info error:', error);\n    return json({ error: error.message || 'Failed to get leave info' }, 500);\n  }\n}\n\n// POST /impulse-api/room-leave - Actually leave the room\nexport async function onRequestPost({ request, env }) {\n  try {\n    await ensurePlayersShape(env);\n    \n    const body = await request.json().catch(() => ({}));\n    const roomCode = up(body.roomCode || '');\n    const userId = (body.userId || '').trim();\n    const confirmed = body.confirmed === true;\n    \n    if (!roomCode) return json({ error: 'roomCode required' }, 400);\n    if (!userId) return json({ error: 'userId required' }, 400);\n    if (!confirmed) return json({ \n      error: 'You must confirm leaving the room',\n      error_code: 'CONFIRMATION_REQUIRED'\n    }, 400);\n    \n    // Check if user is actually in the room\n    const member = await env.DB.prepare(`\n      SELECT name, created_at\n      FROM players \n      WHERE room_code = ? AND user_id = ?\n    `).bind(roomCode, userId).first();\n    \n    if (!member) {\n      return json({ \n        error: 'You are not a member of this room',\n        error_code: 'NOT_A_MEMBER'\n      }, 404);\n    }\n    \n    // Get stats before leaving (for logging)\n    const stats = await getUserRoomStats(env, roomCode, userId);\n    \n    // Remove from players table\n    await upsertWithRetry(env, `\n      DELETE FROM players WHERE room_code = ? AND user_id = ?\n    `, [roomCode, userId]);\n    \n    // Log the leave event with stats\n    await logEvent(env, 'user_left_room', {\n      roomCode,\n      userId,\n      playerName: member.name,\n      memberSince: member.created_at,\n      finalStats: stats\n    });\n    \n    return json({\n      ok: true,\n      message: `Successfully left room ${roomCode}`,\n      roomCode,\n      userId\n    });\n    \n  } catch (error) {\n    console.error('Leave room error:', error);\n    return json({ error: error.message || 'Failed to leave room' }, 500);\n  }\n}\n\nfunction generateLeaveMessage(playerName, stats, daysSinceJoined) {\n  const messages = [\n    `${playerName}, you've been part of this room for ${daysSinceJoined} days.`,\n  ];\n  \n  if (stats.entryCount > 0) {\n    messages.push(`You've made ${stats.entryCount} entries with a total delta of ${stats.totalDelta}.`);\n  }\n  \n  if (stats.focusWeeksCount > 0) {\n    messages.push(`You've set your focus for ${stats.focusWeeksCount} weeks.`);\n  }\n  \n  messages.push('Are you sure you want to leave? This action cannot be undone.');\n  \n  return messages.join(' ');\n}", "import { json, upsertWithRetry, logEvent } from \"./_util.js\";\n\nconst up = (s) => (s || \"\").trim().toUpperCase();\n\nasync function ensureSchema(env) {\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS rooms (\n      code TEXT PRIMARY KEY,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      is_locked INTEGER DEFAULT 0,\n      invite_only INTEGER DEFAULT 0,\n      created_by TEXT,\n      max_members INTEGER DEFAULT 50\n    )\n  `).run();\n  \n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS players (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      room_code TEXT NOT NULL,\n      user_id TEXT NOT NULL,\n      name TEXT NOT NULL,\n      name_norm TEXT,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      last_seen_at TEXT DEFAULT CURRENT_TIMESTAMP\n    )\n  `).run();\n}\n\nasync function isRoomCreator(env, roomCode, userId) {\n  const room = await env.DB.prepare(`\n    SELECT created_by FROM rooms WHERE code = ?\n  `).bind(roomCode).first();\n  \n  return room?.created_by === userId;\n}\n\n// GET /impulse-api/room-manage?roomCode=ABCDE&userId=uuid - Get room management info\nexport async function onRequestGet({ request, env }) {\n  try {\n    await ensureSchema(env);\n    \n    const url = new URL(request.url);\n    const roomCode = up(url.searchParams.get('roomCode') || '');\n    const userId = (url.searchParams.get('userId') || '').trim();\n    \n    if (!roomCode) return json({ error: 'roomCode required' }, 400);\n    if (!userId) return json({ error: 'userId required' }, 400);\n    \n    const room = await env.DB.prepare(`\n      SELECT code, created_at, invite_only, created_by, max_members, invite_code\n      FROM rooms WHERE code = ?\n    `).bind(roomCode).first();\n    \n    if (!room) {\n      return json({ error: 'Room not found' }, 404);\n    }\n    \n    const isCreator = room.created_by === userId;\n    \n    if (!isCreator) {\n      return json({ \n        error: 'Only the room creator can manage room settings',\n        error_code: 'NOT_CREATOR'\n      }, 403);\n    }\n    \n    // Get member count and list\n    const members = await env.DB.prepare(`\n      SELECT user_id, name, created_at, last_seen_at\n      FROM players \n      WHERE room_code = ?\n      ORDER BY created_at ASC\n    `).bind(roomCode).all();\n    \n    return json({\n      ok: true,\n      room: {\n        code: room.code,\n        createdAt: room.created_at,\n        inviteOnly: !!room.invite_only,\n        createdBy: room.created_by,\n        maxMembers: room.max_members,\n        inviteCode: room.invite_code\n      },\n      members: (members.results || []).map(m => ({\n        userId: m.user_id,\n        name: m.name,\n        joinedAt: m.created_at,\n        lastSeen: m.last_seen_at\n      })),\n      memberCount: members.results?.length || 0,\n      isCreator\n    });\n    \n  } catch (error) {\n    console.error('Room manage info error:', error);\n    return json({ error: error.message || 'Failed to get room info' }, 500);\n  }\n}\n\n// POST /impulse-api/room-manage - Update room settings\nexport async function onRequestPost({ request, env }) {\n  try {\n    await ensureSchema(env);\n    \n    const body = await request.json().catch(() => ({}));\n    const roomCode = up(body.roomCode || '');\n    const userId = (body.userId || '').trim();\n    const { inviteOnly, maxMembers } = body;\n    \n    if (!roomCode) return json({ error: 'roomCode required' }, 400);\n    if (!userId) return json({ error: 'userId required' }, 400);\n    \n    const room = await env.DB.prepare(`\n      SELECT created_by FROM rooms WHERE code = ?\n    `).bind(roomCode).first();\n    \n    if (!room) {\n      return json({ error: 'Room not found' }, 404);\n    }\n    \n    if (room.created_by !== userId) {\n      return json({ \n        error: 'Only the room creator can manage room settings',\n        error_code: 'NOT_CREATOR'\n      }, 403);\n    }\n    \n    // Build update query dynamically based on provided fields\n    const updates = [];\n    const values = [];\n    \n    if (typeof inviteOnly === 'boolean') {\n      updates.push('invite_only = ?');\n      values.push(inviteOnly ? 1 : 0);\n    }\n    \n    if (typeof maxMembers === 'number' && maxMembers > 0 && maxMembers <= 200) {\n      updates.push('max_members = ?');\n      values.push(maxMembers);\n    }\n    \n    if (updates.length === 0) {\n      return json({ error: 'No valid settings provided' }, 400);\n    }\n    \n    values.push(roomCode); // for WHERE clause\n    \n    await upsertWithRetry(env, `\n      UPDATE rooms SET ${updates.join(', ')} WHERE code = ?\n    `, values);\n    \n    // Log room settings change\n    await logEvent(env, 'room_settings_changed', {\n      roomCode,\n      userId,\n      changes: { inviteOnly, maxMembers }\n    });\n    \n    // Get updated room info\n    const updatedRoom = await env.DB.prepare(`\n      SELECT code, created_at, invite_only, created_by, max_members\n      FROM rooms WHERE code = ?\n    `).bind(roomCode).first();\n    \n    return json({\n      ok: true,\n      room: {\n        code: updatedRoom.code,\n        createdAt: updatedRoom.created_at,\n        inviteOnly: !!updatedRoom.invite_only,\n        createdBy: updatedRoom.created_by,\n        maxMembers: updatedRoom.max_members\n      }\n    });\n    \n  } catch (error) {\n    console.error('Room manage error:', error);\n    return json({ error: error.message || 'Failed to update room settings' }, 500);\n  }\n}", "import { json, logEvent } from \"./_util.js\";\n\nconst up = (s) => (s || \"\").trim().toUpperCase();\n\n// Generate room code suggestions\nfunction generateRoomSuggestions(baseName = \"\", count = 5) {\n  const suggestions = [];\n  const base = baseName.toUpperCase().replace(/[^A-Z0-9]/g, '').substring(0, 8) || 'ROOM';\n  \n  // Common patterns for room codes\n  const patterns = [\n    // Based on base name\n    () => base + Math.floor(Math.random() * 1000).toString().padStart(3, '0'),\n    () => base.substring(0, 4) + Math.floor(Math.random() * 10000).toString().padStart(4, '0'),\n    \n    // Fun/memorable patterns\n    () => generateWordCombination(),\n    () => generateDateBased(),\n    () => generateRandomCode(6),\n  ];\n  \n  for (let i = 0; i < count && suggestions.length < count; i++) {\n    const pattern = patterns[i % patterns.length];\n    const suggestion = pattern();\n    if (!suggestions.includes(suggestion) && suggestion.length >= 3 && suggestion.length <= 12) {\n      suggestions.push(suggestion);\n    }\n  }\n  \n  return suggestions;\n}\n\nfunction generateWordCombination() {\n  const words1 = ['FOCUS', 'STUDY', 'WORK', 'TEAM', 'SQUAD', 'GUILD', 'CREW'];\n  const words2 = ['ZONE', 'HUB', 'LAB', 'ROOM', 'BASE', 'DEN', 'CAVE'];\n  const word1 = words1[Math.floor(Math.random() * words1.length)];\n  const word2 = words2[Math.floor(Math.random() * words2.length)];\n  const num = Math.floor(Math.random() * 100);\n  return `${word1}${word2}${num}`;\n}\n\nfunction generateDateBased() {\n  const now = new Date();\n  const month = (now.getMonth() + 1).toString().padStart(2, '0');\n  const day = now.getDate().toString().padStart(2, '0');\n  const hour = now.getHours().toString().padStart(2, '0');\n  return `ROOM${month}${day}${hour}`;\n}\n\nfunction generateRandomCode(length) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n}\n\n// Ensure rooms table exists\nasync function ensureRoomsTable(env) {\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS rooms (\n      code TEXT PRIMARY KEY,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP\n    )\n  `).run();\n}\n\n// Check if room codes are available\nasync function checkAvailability(env, roomCodes) {\n  if (!roomCodes.length) return [];\n  \n  await ensureRoomsTable(env);\n  \n  const placeholders = roomCodes.map(() => '?').join(',');\n  const query = `SELECT code FROM rooms WHERE code IN (${placeholders})`;\n  const result = await env.DB.prepare(query).bind(...roomCodes).all();\n  const taken = new Set((result.results || []).map(r => r.code));\n  \n  return roomCodes.map(code => ({\n    code,\n    available: !taken.has(code)\n  }));\n}\n\n// GET /impulse-api/room-suggestions?baseName=MyTeam&count=5\nexport async function onRequestGet({ request, env }) {\n  try {\n    const url = new URL(request.url);\n    const baseName = url.searchParams.get('baseName') || '';\n    const count = Math.min(parseInt(url.searchParams.get('count')) || 5, 10);\n    \n    const suggestions = generateRoomSuggestions(baseName, count * 2); // Generate extra to account for collisions\n    const availability = await checkAvailability(env, suggestions);\n    \n    // Return only available suggestions, up to the requested count\n    const available = availability.filter(item => item.available).slice(0, count);\n    \n    // Log suggestion request\n    await logEvent(env, 'room_suggestions_requested', {\n      baseName,\n      requestedCount: count,\n      generatedCount: suggestions.length,\n      availableCount: available.length\n    });\n    \n    return json({ \n      ok: true, \n      suggestions: available.map(item => item.code),\n      baseName,\n      count: available.length\n    });\n    \n  } catch (error) {\n    console.error('Room suggestions error:', error);\n    return json({ error: error.message || 'Failed to generate room suggestions' }, 500);\n  }\n}\n\n// POST /impulse-api/room-suggestions - Check specific room codes for availability\nexport async function onRequestPost({ request, env }) {\n  try {\n    const body = await request.json().catch(() => ({}));\n    const { roomCodes = [] } = body;\n    \n    if (!Array.isArray(roomCodes) || roomCodes.length === 0) {\n      return json({ error: 'roomCodes array is required' }, 400);\n    }\n    \n    if (roomCodes.length > 20) {\n      return json({ error: 'Maximum 20 room codes can be checked at once' }, 400);\n    }\n    \n    // Normalize and validate room codes\n    const normalizedCodes = roomCodes.map(code => up(code)).filter(code => {\n      return code.length >= 3 && code.length <= 12 && /^[A-Z0-9]+$/.test(code);\n    });\n    \n    const availability = await checkAvailability(env, normalizedCodes);\n    \n    await logEvent(env, 'room_availability_checked', {\n      requestedCount: roomCodes.length,\n      validCount: normalizedCodes.length,\n      availableCount: availability.filter(item => item.available).length\n    });\n    \n    return json({ \n      ok: true, \n      results: availability\n    });\n    \n  } catch (error) {\n    console.error('Room availability check error:', error);\n    return json({ error: error.message || 'Failed to check room availability' }, 500);\n  }\n}", "// functions/impulse-api/state.js\nimport { json, upsertWithRetry, logEvent } from \"./_util.js\";\n\nconst up = (s) => (s || \"\").trim().toUpperCase();\n\nasync function getCols(env, table) {\n  const info = await env.DB.prepare(`PRAGMA table_info(${table})`).all();\n  const cols = {};\n  for (const r of (info.results || [])) cols[r.name] = { notnull: !!r.notnull, pk: !!r.pk, type: r.type };\n  return cols;\n}\n\nasync function ensurePlayersShape(env) {\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS players (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      room_code TEXT NOT NULL,\n      user_id TEXT NOT NULL,\n      name TEXT NOT NULL,\n      name_norm TEXT,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      last_seen_at TEXT DEFAULT CURRENT_TIMESTAMP\n    )\n  `).run();\n  await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_user ON players(room_code, user_id)`).run();\n  await env.DB.prepare(`CREATE UNIQUE INDEX IF NOT EXISTS u_players_room_name_norm ON players(room_code, name_norm)`).run();\n}\n\nasync function ensureEntriesShape(env) {\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS entries (\n      id INTEGER PRIMARY KEY AUTOINCREMENT\n      -- columns added below if missing\n    )\n  `).run();\n\n  const cols = await getCols(env, \"entries\");\n  const add = async (name, ddl) => { if (!cols[name]) await env.DB.prepare(`ALTER TABLE entries ADD COLUMN ${name} ${ddl}`).run(); };\n\n  await add(\"room_code\",  \"TEXT\");\n  await add(\"player_uuid\",\"TEXT\"); // required path now\n  await add(\"player_name\",\"TEXT\");\n  await add(\"delta\",      \"INTEGER DEFAULT 0\");\n  await add(\"label\",      \"TEXT\");\n  await add(\"created_at\", \"TEXT DEFAULT CURRENT_TIMESTAMP\");\n\n  await env.DB.prepare(`CREATE INDEX IF NOT EXISTS idx_entries_room ON entries(room_code)`).run();\n  await env.DB.prepare(`CREATE INDEX IF NOT EXISTS idx_entries_room_playeruuid ON entries(room_code, player_uuid)`).run();\n}\n\nasync function requireMember(env, roomCode, userId) {\n  await ensurePlayersShape(env);\n  const m = await env.DB.prepare(`\n    SELECT user_id, name\n    FROM players\n    WHERE room_code = ? AND user_id = ?\n    LIMIT 1\n  `).bind(roomCode, userId).first();\n  return m || null;\n}\n\n// GET /impulse-api/state?roomCode=ABCDE\nexport const onRequestGet = async ({ request, env }) => {\n  try {\n    const roomCode = up(new URL(request.url).searchParams.get(\"roomCode\"));\n    if (!roomCode) return json({ error: \"roomCode required\" }, 400);\n\n    await ensureEntriesShape(env);\n\n    const rows = await env.DB\n      .prepare(`\n        SELECT player_name AS player, delta, label, created_at\n        FROM entries\n        WHERE room_code = ?\n        ORDER BY created_at ASC\n      `)\n      .bind(roomCode)\n      .all();\n\n    const history = (rows.results || []).map(r => ({\n      player: r.player ?? null,\n      delta: r.delta || 0,\n      label: r.label ?? null,\n      created_at: r.created_at\n    }));\n\n    const balance = history.reduce((s, r) => s + (r.delta || 0), 0);\n    return json({ ok: true, roomCode, balance, history });\n  } catch (e) {\n    return json({ error: e?.message || String(e) }, 500);\n  }\n};\n\n// POST /impulse-api/state\n// Body: { roomCode, entry:{ delta:number, label?:string, userId:string } }\nexport const onRequestPost = async ({ request, env }) => {\n  try {\n    const { roomCode: rc, entry } = await request.json().catch(() => ({}));\n    const roomCode = up(rc);\n    const userId = (entry?.userId || \"\").trim();\n\n    if (!roomCode || !entry || typeof entry.delta !== \"number\") {\n      return json({ error: \"roomCode and entry{delta} required\" }, 400);\n    }\n    if (!userId) {\n      return json({ error: \"userId (UUID) required\", error_code: \"AUTH_REQUIRED\" }, 401);\n    }\n\n    await ensureEntriesShape(env);\n\n    const member = await requireMember(env, roomCode, userId);\n    if (!member) {\n      return json({ error: \"Join the room before posting entries.\", error_code: \"JOIN_REQUIRED\" }, 403);\n    }\n\n    // write entry using canonical server-side name with retry logic\n    await upsertWithRetry(env, `\n      INSERT INTO entries (room_code, player_uuid, player_name, delta, label, created_at)\n      VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n    `, [roomCode, userId, member.name, entry.delta, entry.label ?? null]);\n    \n    // Log entry creation event\n    await logEvent(env, 'entry_created', {\n      roomCode,\n      userId,\n      delta: entry.delta,\n      label: entry.label,\n      playerName: member.name\n    });\n\n    // optional: refresh last_seen_at for the member with retry logic\n    await upsertWithRetry(env, `\n      UPDATE players SET last_seen_at = CURRENT_TIMESTAMP\n      WHERE room_code = ? AND user_id = ?\n    `, [roomCode, userId]);\n\n    return json({ ok: true });\n  } catch (e) {\n    return json({ error: e?.message || String(e) }, 500);\n  }\n};\n\n// DELETE /impulse-api/state?roomCode=ABCDE&userId=uuid\n// Undo most recent entry for this UUID in this room within 15 minutes\nexport const onRequestDelete = async ({ request, env }) => {\n  try {\n    const url = new URL(request.url);\n    const roomCode = up(url.searchParams.get(\"roomCode\"));\n    const userId   = (url.searchParams.get(\"userId\") || \"\").trim();\n\n    if (!roomCode) return json({ error: \"roomCode required\" }, 400);\n    if (!userId)   return json({ error: \"userId (UUID) required\", error_code: \"AUTH_REQUIRED\" }, 401);\n\n    await ensureEntriesShape(env);\n\n    const member = await requireMember(env, roomCode, userId);\n    if (!member) {\n      return json({ error: \"Join the room before undoing entries.\", error_code: \"JOIN_REQUIRED\" }, 403);\n    }\n\n    const row = await env.DB.prepare(`\n      SELECT id, created_at\n      FROM entries\n      WHERE room_code = ? AND player_uuid = ?\n      ORDER BY created_at DESC\n      LIMIT 1\n    `).bind(roomCode, userId).first();\n\n    if (!row) return json({ error: \"Nothing to undo\" }, 404);\n\n    const parsed = Date.parse((row.created_at || \"\").replace(\" \", \"T\") + \"Z\");\n    if (!Number.isFinite(parsed)) return json({ error: \"Bad timestamp on last entry\" }, 500);\n\n    const fifteenMs = 15 * 60 * 1000;\n    if (Date.now() - parsed > fifteenMs) {\n      return json({ error: \"Undo window elapsed (15 min)\" }, 400);\n    }\n\n    await upsertWithRetry(env, `DELETE FROM entries WHERE id = ?`, [row.id]);\n    \n    // Log entry deletion event\n    await logEvent(env, 'entry_deleted', {\n      roomCode,\n      userId,\n      entryId: row.id,\n      deletedAt: new Date().toISOString()\n    });\n    return json({ ok: true });\n  } catch (e) {\n    return json({ error: e?.message || String(e) }, 500);\n  }\n};\n", "// Create: functions/impulse-api/user.js\nimport { json, upsertWithRetry, logEvent } from \"./_util.js\";\n\nasync function ensureUserTable(env) {\n  // Create users table if it doesn't exist\n  await env.DB.prepare(`\n    CREATE TABLE IF NOT EXISTS users (\n      id TEXT PRIMARY KEY,\n      email TEXT,\n      display_name TEXT,\n      created_at TEXT DEFAULT CURRENT_TIMESTAMP,\n      updated_at TEXT DEFAULT CURRENT_TIMESTAMP\n    )\n  `).run();\n}\n\n// POST /impulse-api/user - Create or update user record\nexport async function onRequestPost({ request, env }) {\n  try {\n    const payload = await request.json().catch(() => ({}));\n    const { userId, displayName, email } = payload;\n\n    if (!userId || typeof userId !== 'string') {\n      return json({ error: 'userId required' }, 400);\n    }\n\n    await ensureUserTable(env);\n\n    // Use UPSERT with retry logic to handle existing users\n    const result = await upsertWithRetry(env, `\n      INSERT INTO users (id, email, display_name, updated_at)\n      VALUES (?, ?, ?, datetime('now'))\n      ON CONFLICT(id) DO UPDATE SET\n        email = COALESCE(excluded.email, email),\n        display_name = COALESCE(excluded.display_name, display_name),\n        updated_at = datetime('now')\n    `, [userId, email, displayName]);\n    \n    // Log user creation/update event\n    await logEvent(env, 'user_upserted', {\n      userId,\n      email: email ? '[redacted]' : null, // Don't log actual email for privacy\n      displayName,\n      isNewUser: result.changes > 0\n    });\n\n    return json({\n      userId,\n      email,\n      displayName,\n      created: result.changes > 0\n    }, result.changes > 0 ? 201 : 200);\n\n  } catch (error) {\n    console.error('User creation error:', error);\n    return json({ error: error.message || 'Internal server error' }, 500);\n  }\n}\n\n// GET /impulse-api/user?userId=xxx - Get user info\nexport async function onRequestGet({ request, env }) {\n  try {\n    const url = new URL(request.url);\n    const userId = url.searchParams.get('userId');\n\n    if (!userId) {\n      return json({ error: 'userId required' }, 400);\n    }\n\n    await ensureUserTable(env);\n\n    const user = await env.DB.prepare(\n      'SELECT id, email, display_name, created_at FROM users WHERE id = ?'\n    ).bind(userId).first();\n\n    if (!user) {\n      return json({ error: 'User not found' }, 404);\n    }\n\n    return json({\n      userId: user.id,\n      email: user.email,\n      displayName: user.display_name,\n      createdAt: user.created_at\n    });\n\n  } catch (error) {\n    console.error('User fetch error:', error);\n    return json({ error: error.message || 'Internal server error' }, 500);\n  }\n}", "import { onRequestGet as __impulse_api_events_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/events.js\"\nimport { onRequestPost as __impulse_api_events_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/events.js\"\nimport { onRequestGet as __impulse_api_focus_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/focus.js\"\nimport { onRequestPost as __impulse_api_focus_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/focus.js\"\nimport { onRequestGet as __impulse_api_health_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/health.js\"\nimport { onRequestPost as __impulse_api_init_db_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/init-db.js\"\nimport { onRequestGet as __impulse_api_room_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room.js\"\nimport { onRequestPost as __impulse_api_room_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room.js\"\nimport { onRequestGet as __impulse_api_room_leave_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room-leave.js\"\nimport { onRequestPost as __impulse_api_room_leave_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room-leave.js\"\nimport { onRequestGet as __impulse_api_room_manage_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room-manage.js\"\nimport { onRequestPost as __impulse_api_room_manage_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room-manage.js\"\nimport { onRequestGet as __impulse_api_room_suggestions_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room-suggestions.js\"\nimport { onRequestPost as __impulse_api_room_suggestions_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/room-suggestions.js\"\nimport { onRequestDelete as __impulse_api_state_js_onRequestDelete } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/state.js\"\nimport { onRequestGet as __impulse_api_state_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/state.js\"\nimport { onRequestPost as __impulse_api_state_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/state.js\"\nimport { onRequestGet as __impulse_api_user_js_onRequestGet } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/user.js\"\nimport { onRequestPost as __impulse_api_user_js_onRequestPost } from \"/Users/josh/Documents/GitHub/impulse-wallet/functions/impulse-api/user.js\"\n\nexport const routes = [\n    {\n      routePath: \"/impulse-api/events\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_events_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/events\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_events_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/focus\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_focus_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/focus\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_focus_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/health\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_health_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/init-db\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_init_db_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/room\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_room_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/room\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_room_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/room-leave\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_room_leave_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/room-leave\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_room_leave_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/room-manage\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_room_manage_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/room-manage\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_room_manage_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/room-suggestions\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_room_suggestions_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/room-suggestions\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_room_suggestions_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/state\",\n      mountPath: \"/impulse-api\",\n      method: \"DELETE\",\n      middlewares: [],\n      modules: [__impulse_api_state_js_onRequestDelete],\n    },\n  {\n      routePath: \"/impulse-api/state\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_state_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/state\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_state_js_onRequestPost],\n    },\n  {\n      routePath: \"/impulse-api/user\",\n      mountPath: \"/impulse-api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__impulse_api_user_js_onRequestGet],\n    },\n  {\n      routePath: \"/impulse-api/user\",\n      mountPath: \"/impulse-api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__impulse_api_user_js_onRequestPost],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/bundle-So1vPP/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/bundle-So1vPP/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/bundle-So1vPP/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/pages-yKdVed/functionsWorker-0.42732680892103736.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/pages-yKdVed/functionsWorker-0.42732680892103736.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/bundle-Y2Njdo/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/josh/Documents/GitHub/impulse-wallet/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/bundle-Y2Njdo/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/josh/Documents/GitHub/impulse-wallet/.wrangler/tmp/bundle-Y2Njdo/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["urls", "checkURL", "__name", "up", "onRequestGet", "onRequestPost", "ensurePlayersShape", "ensureSchema", "getCols", "requireMember", "value", "_a", "result", "char", "prefix", "i", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
